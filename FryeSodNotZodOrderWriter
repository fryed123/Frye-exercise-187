//AUTHOR: Darren Frye
//COURSE: CPT 187
//PURPOSE: Provides solution code for another SodNotZod program using multiple supportive
//classes with method overloading, object passing, and now file processing/searching.
//CREATEDATE: 4/16/2020

package edu.cpt187.frye.participation;

import java.io.PrintWriter;
import java.io.FileWriter;
import java.io.IOException;

public class OrderWriter 
{
	//ATTRIBUTES

	private boolean FOUND = true;
	private boolean NOT_FOUND = false;

	private boolean fileFoundFlag = false;
	private String masterFileName = "";
	private int recordCount = 0;

	//BEHAVIORS

	//Non-default constructor
	public OrderWriter(String borrowedFileName)
	{
		masterFileName = borrowedFileName;
	}//end constructor

	//Setters

	public void setWriteOrder(int borrowedItemID, String borrowedItemName, double borrowedItemPrice, 
			int borrowedQuantity, double borrowedOrderCost)
	{
		try
		{
			PrintWriter filePW = new PrintWriter(new FileWriter(masterFileName, true));

			filePW.printf("%n%d\t%s\t%.2f\t%d\t%.2f%n", borrowedItemID, borrowedItemName, borrowedItemPrice, borrowedQuantity, borrowedOrderCost);

			fileFoundFlag = FOUND;

			filePW.close();
			
			recordCount++;
		}
		catch(IOException ex)
		{
			fileFoundFlag = NOT_FOUND;
		}
	}

	//Getters

	public boolean getFileFoundFlag()
	{
		return fileFoundFlag;
	}

	public String getFileName()
	{
		return masterFileName;
	}

	public int getRecordCount()
	{
		return recordCount;
	}
}
